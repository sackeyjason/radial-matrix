{"version":3,"sources":["fps.js","mode_selector.js","../node_modules/lodash.memoize/index.js","app.js"],"names":["fpsUpdateDelay","updateFps","t","Math","round","renderFps","ctx","fps","fillStyle","fillRect","font","fillText","ModeSelector","select","events","mode","init","addEventListener","value","push","SCREEN_WIDTH","SCREEN_HEIGHT","GRID_WIDTH","GRID_HEIGHT","VOID_RADIUS","CRUST_THICKNESS","SCREEN_CENTRE","ACTIVE_RADIUS","circleRadius","circle","x","y","bottom","w","eventQueue","modeSelector","selectMode","pieces","z","shape","piece","type","angle","grid","Array","fill","map","r","gridLookup","getGridCoords","radius","floor","PI","renderGrid","pixelHeight","hue","dotX","xCentre","yCentre","dx","dy","sqrt","getAngle","gridX","gridY","fuzz","random","shock","hue2","getClickHandler","e","timestamp","startedAt","rect","target","getBoundingClientRect","clientX","left","clientY","top","scale","width","halfPi","atan","start","shockDecay","processEvent","event","speed","update","length","pop","empty","max","render","window","performance","now","Date","last","step","undefined","min","requestAnimationFrame","console","log","view","setAttribute","getContext"],"mappings":"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","file":"app.972bf0d5.js","sourceRoot":"..\\src","sourcesContent":["let fpsUpdateDelay = 0;\r\n\r\nexport function updateFps(t) {\r\n  fpsUpdateDelay += t;\r\n  if (fpsUpdateDelay > 1000) {\r\n    fpsUpdateDelay = 0;\r\n    return Math.round(1 / (t / 1000));\r\n  }\r\n}\r\n\r\n\r\nexport function renderFps(ctx, fps) {\r\n  // Draw number to the screen\r\n  ctx.fillStyle = \"#333\";\r\n  ctx.fillRect(0, 0, 80, 32);\r\n  ctx.font = \"14px Arial\";\r\n  ctx.fillStyle = \"#CCC\";\r\n  ctx.fillText(\"FPS: \" + fps, 10, 20);\r\n}\r\n","export default function ModeSelector(select, events) {\r\n  this.mode = \"normal\";\r\n  this.init = () => {\r\n    select.addEventListener(\"change\", () => {\r\n      this.mode = select.value;\r\n      if (select.value === 'nuts') {\r\n        events.push('go nuts');\r\n      }\r\n    })\r\n    select.value = 'normal';\r\n    \r\n  }\r\n}\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = memoize;\n","import { updateFps, renderFps } from \"./fps\";\r\nimport ModeSelector from \"./mode_selector\";\r\nimport memoize from \"lodash.memoize\";\r\n\r\nconst SCREEN_WIDTH = 640;\r\nconst SCREEN_HEIGHT = 480;\r\nconst GRID_WIDTH = 32;\r\nconst GRID_HEIGHT = 20;\r\nconst VOID_RADIUS = 16;\r\nconst CRUST_THICKNESS = 16;\r\nconst SCREEN_CENTRE = [(SCREEN_WIDTH - 1) / 2, (SCREEN_HEIGHT - 1) / 2];\r\nconst ACTIVE_RADIUS = SCREEN_HEIGHT / 2 - (VOID_RADIUS + CRUST_THICKNESS);\r\n\r\nlet circleRadius = SCREEN_HEIGHT - 1 * CRUST_THICKNESS;\r\nconst circle = {\r\n  x: (SCREEN_WIDTH - circleRadius) / 2,\r\n  y: CRUST_THICKNESS,\r\n  bottom: SCREEN_HEIGHT - CRUST_THICKNESS,\r\n  w: (SCREEN_WIDTH - circleRadius) / 2 + circleRadius,\r\n};\r\nlet ctx;\r\nconst eventQueue = [];\r\n\r\nconst modeSelector = new ModeSelector(selectMode, eventQueue);\r\n\r\nlet pieces = {\r\n  z: {\r\n    shape: [\r\n      [1, 1],\r\n      [0, 1, 1],\r\n    ],\r\n  },\r\n};\r\n\r\nlet piece = {\r\n  x: 0,\r\n  y: 0,\r\n  type: \"z\",\r\n  angle: 0,\r\n};\r\n\r\nconst grid = new Array(GRID_HEIGHT).fill(null).map((r) => {\r\n  return new Array(GRID_WIDTH).fill(0);\r\n});\r\n\r\ngrid[0] = [1, 1, 1];\r\ngrid[1] = [0, 0, 1];\r\n\r\ngrid[GRID_HEIGHT - 1].fill(1, 1, GRID_WIDTH - 1);\r\ngrid[GRID_HEIGHT - 2].fill(1, 2, GRID_WIDTH - 2);\r\n\r\nfunction gridLookup(x, y) {\r\n  return grid[y] && grid[y][x];\r\n}\r\n// let lookup = memoize(gridLookup, (x, y) => `${x},${y}`);\r\n\r\nfunction getGridCoords(angle, radius) {\r\n  const gridX = Math.floor((angle / (2 * Math.PI)) * GRID_WIDTH);\r\n  const gridY = Math.floor(\r\n    ((radius - VOID_RADIUS) / ACTIVE_RADIUS) * GRID_HEIGHT\r\n  );\r\n  return [gridX, gridY];\r\n}\r\n\r\nfunction renderGrid(grid) {\r\n  ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\r\n  ctx.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n  let pixelHeight = 2;\r\n\r\n  let hue = 0;\r\n  if (modeSelector.mode === \"colour\") {\r\n    hue = (dotX / GRID_WIDTH) * 360;\r\n    ctx.fillStyle = `hsla(${hue}deg, 100%, 80%, 1.0)`;\r\n  } else if (modeSelector.mode === \"nuts\") {\r\n    hue = (dotX / (GRID_WIDTH / 20)) * 360;\r\n    ctx.fillStyle = `hsla(${hue}deg, 100%, 80%, 1.0)`;\r\n  } else if (modeSelector.mode === \"vcr\") {\r\n    ctx.fillStyle = `rgb(10,250,100)`;\r\n    pixelHeight = 1;\r\n  } else {\r\n    ctx.fillStyle = `rgb(200,200,200)`;\r\n  }\r\n\r\n  const xCentre = SCREEN_CENTRE[0];\r\n  const yCentre = SCREEN_CENTRE[1];\r\n\r\n  // for each pixel\r\n  for (let y = circle.y; y < circle.bottom; y += 2) {\r\n    for (let x = circle.x; x < circle.w; x += 2) {\r\n      const dx = x - xCentre;\r\n      const dy = y - yCentre;\r\n\r\n      const radius = Math.sqrt(dx ** 2 + dy ** 2);\r\n      const angle = getAngle(dx, dy);\r\n\r\n      const [gridX, gridY] = getGridCoords(angle, radius);\r\n\r\n      let fuzz = 0;\r\n      if (modeSelector.mode === \"fuzzy\") {\r\n        fuzz = Math.random() * 3 - 1.5;\r\n      } else if (modeSelector.mode === \"nuts\") {\r\n        fuzz = Math.random() * 6 - 3;\r\n      }\r\n      if (shock) fuzz = Math.random() * shock - shock / 2;\r\n\r\n      // if (gridLookup(gridX, gridY)) {\r\n      // if (lookup(gridX, gridY)) {\r\n      if (grid[gridY] && grid[gridY][gridX]) {\r\n        if (modeSelector.mode === \"colour\" || modeSelector.mode === \"nuts\") {\r\n          let hue2 = (hue + (angle / (2 * Math.PI)) * 360) % 360;\r\n          ctx.fillStyle = `hsla(${hue2}deg, 100%, 80%, 1.0)`;\r\n        }\r\n        ctx.fillRect(x, y, 2 + fuzz, pixelHeight + fuzz);\r\n      }\r\n    }\r\n  }\r\n  // lookup.cache.clear();\r\n}\r\n\r\nfunction getClickHandler() {\r\n  return function handleClick(e) {\r\n    const startedAt = timestamp();\r\n    var rect = e.target.getBoundingClientRect();\r\n    var x = e.clientX - rect.left; //x position within the element.\r\n    var y = e.clientY - rect.top; //y position within the element.\r\n\r\n    var scale = SCREEN_WIDTH / rect.width;\r\n\r\n    x = x * scale;\r\n    y = y * scale;\r\n\r\n    const dx = x - SCREEN_CENTRE[0];\r\n    const dy = y - SCREEN_CENTRE[1];\r\n\r\n    const radius = Math.sqrt(dx ** 2 + dy ** 2);\r\n    const angle = getAngle(dx, dy);\r\n\r\n    // ctx.strokeStyle = \"white\";\r\n    // ctx.lineWidth = 1;\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(...SCREEN_CENTRE);\r\n    // ctx.lineTo(x, y);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n\r\n    const [gridX, gridY] = getGridCoords(angle, radius);\r\n    grid[gridY] && (grid[gridY][gridX] = 1);\r\n  };\r\n}\r\n\r\nconst halfPi = Math.PI / 2;\r\n/**\r\n * Get angle from top, clockwise, positive\r\n * @param {number} x\r\n * @param {number} y\r\n */\r\nfunction getAngle(x, y) {\r\n  // reorient from top\r\n  let angle = Math.atan(y / x) + halfPi;\r\n  // flip around left-oriented angles\r\n  if (x < 0) angle += Math.PI;\r\n  return angle;\r\n}\r\n\r\nlet shock = 0;\r\nlet shockDecay = 0.1;\r\n\r\nfunction processEvent(event) {\r\n  if (event === \"go nuts\") shock = 50;\r\n}\r\n\r\nlet start;\r\nlet dotX = 0;\r\nconst speed = 2 / 30 / 32;\r\nlet fps;\r\n\r\nfunction update(t) {\r\n  while (eventQueue.length) {\r\n    let event = eventQueue.pop();\r\n    processEvent(event);\r\n  }\r\n  eventQueue.empty;\r\n  fps = updateFps(t) || fps;\r\n  dotX = (dotX + speed * t) % GRID_WIDTH;\r\n  grid[10].fill(0);\r\n  grid[10][Math.floor(dotX)] = 1;\r\n\r\n  shock = Math.max(0, shock - shockDecay * t);\r\n\r\n  // pieceOnGrid();\r\n}\r\n\r\nfunction render() {\r\n  renderGrid(grid);\r\n  renderFps(ctx, fps);\r\n}\r\n\r\nfunction timestamp() {\r\n  return window.performance && window.performance.now\r\n    ? window.performance.now()\r\n    : Date.now();\r\n}\r\n\r\nlet last = timestamp();\r\n\r\nfunction step() {\r\n  let now = timestamp();\r\n  if (start === undefined) start = now;\r\n  const elapsed = now - start;\r\n  let dt = Math.min(1000, now - last);\r\n  update(dt);\r\n  render();\r\n  last = now;\r\n  window.requestAnimationFrame(step);\r\n}\r\n\r\nwindow.requestAnimationFrame(step);\r\n\r\nfunction init() {\r\n  console.log(\"init()\");\r\n  console.log(grid);\r\n  modeSelector.init();\r\n  console.log(\"modeSelector: \", modeSelector);\r\n  view.setAttribute(\"width\", SCREEN_WIDTH);\r\n  view.setAttribute(\"height\", SCREEN_HEIGHT);\r\n  ctx = view.getContext(\"2d\");\r\n\r\n  renderGrid(ctx);\r\n  view.addEventListener(\"click\", getClickHandler());\r\n  window.requestAnimationFrame(step);\r\n}\r\n\r\ninit();\r\n"]}